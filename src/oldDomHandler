/* eslint-disable no-loop-func */
import {
  projects,
  selectProject,
  createProject,
  deleteProject,
} from './projects';

let selectedProject = null;

function updateSelectedProject(project) {
  selectedProject = project;
}

export default function createPageLayout() {
  const createHeader = () => {
    const header = document.createElement('div');
    header.classList.add('header');
    document.body.appendChild(header);

    const headerText = document.createElement('h2');
    headerText.innerText = 'Todo List';
    header.appendChild(headerText);
  };

  createHeader();

  const main = document.createElement('div');
  main.classList.add('main');
  document.body.appendChild(main);

  const projectsWrapper = document.createElement('div');
  projectsWrapper.classList.add('projectWrapper');
  main.appendChild(projectsWrapper);

  const projectViewer = document.createElement('div');
  projectViewer.classList.add('projectViewer');
  projectsWrapper.appendChild(projectViewer);

  function appendProject(project) {
    const projectButton = document.createElement('button');
    projectButton.textContent = project.name;
    projectViewer.appendChild(projectButton);

    const deleteProjectBtnContainer = document.createElement('div');
    deleteProjectBtnContainer.classList.add('deleteProjectWrapper');
    projectButton.appendChild(deleteProjectBtnContainer);

    const deletedProjectBtn = document.createElement('button');
    deletedProjectBtn.innerText = 'X';
    deleteProjectBtnContainer.appendChild(deletedProjectBtn);
    deletedProjectBtn.addEventListener('click', () => {
      deleteProject('Home');
    });

    projectButton.addEventListener('click', () => {
      selectProject(project, updateSelectedProject);

      taskViewer.innerText = ''; // Clear previous tasks

      const addTaskButton = document.createElement('button');
      addTaskButton.classList.add('addTaskButton');
      addTaskButton.innerText = '+ Add task';
      taskViewer.appendChild(addTaskButton);

      let inputAdded = false;

      addTaskButton.addEventListener('click', () => {
        if (inputAdded === false) {
          const taskInputWrapper = document.createElement('div');
          taskInputWrapper.classList.add('taskInputWrapper');
          taskViewer.appendChild(taskInputWrapper);

          const taskInput = document.createElement('input');
          taskInput.classList.add('taskInput');
          taskInputWrapper.appendChild(taskInput);
          inputAdded = true;

          const confirmTaskInput = document.createElement('button');
          confirmTaskInput.classList.add('confirmTaskInputBtn');
          confirmTaskInput.innerText = '✓';
          taskInputWrapper.appendChild(confirmTaskInput);

          const cancelTaskInput = document.createElement('button');
          cancelTaskInput.classList.add('cancelTaskInputBtn');
          cancelTaskInput.innerText = 'X';
          taskInputWrapper.appendChild(cancelTaskInput);
        }
      });

      if (selectedProject.tasks !== undefined) {
        for (let j = 0; j < selectedProject.tasks.length; j++) {
          const task = document.createElement('li');
          task.innerText = selectedProject.tasks[j].title;
          taskViewer.appendChild(task);
        }
      }
    });
  }

  function appendProjects() {
    for (let i = 0; i < projects.length; i++) {
      appendProject(projects[i]);
    }
  }

  appendProjects();

  const handleButtons = () => {
    let inputAddedFlag = false;

    const addProjectButton = document.createElement('button');
    addProjectButton.innerText = '+ Add project';
    addProjectButton.classList.add('inactive');

    addProjectButton.addEventListener('click', () => {
      if (inputAddedFlag === false) {
        addProjectButton.innerText = '';
      }
      addProjectButton.classList.remove('inactive');
      addProjectButton.classList.add('active');

      const inputText = document.createElement('input');
      projectViewer.appendChild(inputText);

      const childButtonWrapper = document.createElement('div');
      childButtonWrapper.classList.add('childBtnWrapper');
      projectViewer.appendChild(childButtonWrapper);

      const confirmInput = document.createElement('button');
      confirmInput.classList.add('confirmInputBtn');
      confirmInput.innerText = '✓';
      childButtonWrapper.appendChild(confirmInput);

      const cancelInput = document.createElement('button');
      cancelInput.innerText = 'X';
      cancelInput.classList.add('cancelInputBtn');
      childButtonWrapper.appendChild(cancelInput);

      confirmInput.addEventListener('click', () => {
        const newProjectName = inputText.value;
        createProject(newProjectName);
        projectViewer.innerText = '';
        appendProjects();
        projectViewer.appendChild(addProjectButton);
        inputAddedFlag = true;
        addProjectButton.classList.remove('active');
        addProjectButton.classList.add('inactive');
        addProjectButton.innerText = ' + Add project';
      });

      inputAddedFlag = true;
    });

    projectViewer.appendChild(addProjectButton);
  };

  handleButtons();

  const taskWrapper = document.createElement('div');
  taskWrapper.classList.add('taskWrapper');
  main.appendChild(taskWrapper);

  const taskViewer = document.createElement('div');
  taskViewer.classList.add('taskViewer');
  taskWrapper.appendChild(taskViewer);

  const footer = document.createElement('div');
  footer.classList.add('footer');
  document.body.appendChild(footer);
}
